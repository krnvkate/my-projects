import telebot
from telebot import types
import psycopg2
import datetime
token = '6484370705:AAGCtmjuxLhNApuy_gDWTpNBWECg0Htr9HM'
bot = telebot.TeleBot(token)

#–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
conn = psycopg2.connect(database="lab_2",user="mospolytech",password="1a2b3c4d")
cur = conn.cursor()

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /polytech
@bot.message_handler(commands = ['polytech'])
def url(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(text='–°–∞–π—Ç –ü–æ–ª–∏—Ç–µ—Ö–∞ üè¨', url='https://mospolytech.ru/')
    markup.add(btn1)
    bot.send_message(message.from_user.id, "–ü–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –í–£–ó–∞", reply_markup = markup)

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /lk
@bot.message_handler(commands = ['lk'])
def url(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(text='–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç üë®‚Äçüéì', url='https://e.mospolytech.ru/#/login')
    markup.add(btn1)
    bot.send_message(message.from_user.id, "–ü–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞", reply_markup = markup)

#—Ñ—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –Ω–µ–¥–µ–ª–∏
def get_current_week():
    today = datetime.date.today()
    week_number = today.isocalendar()[1]
    if week_number % 2 == 0:
        return "–ù–∏–∂–Ω—è—è –Ω–µ–¥–µ–ª—è"
    else:
        return "–í–µ—Ä—Ö–Ω—è—è –Ω–µ–¥–µ–ª—è"

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /week
@bot.message_handler(commands=['week'])
def show_current_week(message):
    week = get_current_week()
    bot.send_message(message.chat.id, week)

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
@bot.message_handler(commands=['help'])
def show_help(message):
    help_text = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –±–æ—Ç —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –¥–ª—è –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã.\n\n"
    help_text += "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
    help_text += "/week - —É–∑–Ω–∞—Ç—å –∫–∞–∫–∞—è —Ç–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è - –≤–µ—Ä—Ö–Ω—è—è –∏–ª–∏ –Ω–∏–∂–Ω—è—è\n"
    help_text += "/polytech - –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –ü–æ–ª–∏—Ç–µ—Ö–∞\n"
    help_text += "/lk - –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞\n"
    help_text += "/help - –≤—ã–≤–µ—Å—Ç–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    bot.send_message(message.chat.id, help_text)

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    keyboard = types.ReplyKeyboardMarkup(row_width=2)
    days = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞"]
    weeks = [types.KeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é"),
            types.KeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é")]
    keyboard.add(*[types.KeyboardButton(day) for day in days])
    keyboard.add(*weeks)
    bot.send_message(message.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏:', reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ —Å —Ç–µ–∫—É—â–µ–π –∏ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–µ–π
@bot.message_handler(func=lambda message: message.text in ["–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é", "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é"])
def handle_schedule_buttons(message):
    week = message.text
    type_of_week = get_current_week()
    zapros = "SELECT a.day_of_week, name, room_numb, start_time, full_name FROM timetable a JOIN subject b ON a.subject_id = b.subject_id JOIN teacher c ON b.subject_id = c.subject_id"
    if week == "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é":
        if type_of_week == "–í–µ—Ä—Ö–Ω—è—è –Ω–µ–¥–µ–ª—è":
            cur.execute( f"{zapros}" + " WHERE type_of_week = '–Ω–µ—á—ë—Ç–Ω–∞—è';")
        else: cur.execute( f"{zapros}" + " WHERE type_of_week = '—á—ë—Ç–Ω–∞—è';")
    elif week == "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é":
        if type_of_week == "–í–µ—Ä—Ö–Ω—è—è –Ω–µ–¥–µ–ª—è":
            cur.execute(f"{zapros}" + " WHERE type_of_week = '—á—ë—Ç–Ω–∞—è';")
        else: cur.execute(f"{zapros}" + " WHERE type_of_week = '–Ω–µ—á—ë—Ç–Ω–∞—è';")
    schedule = cur.fetchall()
    if len(schedule) > 0:
        schedule_text = ""
        for i in schedule:
            subject = i[1]
            room_numb = i[2]
            start_time = i[3]
            full_name = i[4]
            if i[0] not in schedule_text:  schedule_text +=f"\n{i[0]} \n\n"
            schedule_text += f"{subject} \n{room_numb} {start_time} \n{full_name} \n\n"
        bot.send_message(message.chat.id, schedule_text)
    else:
        bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ —Å –¥–Ω—è–º–∏ –Ω–µ–¥–µ–ª–∏
@bot.message_handler(func=lambda message: message.text in ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞"])
def handle_weekday_buttons(message):
    day = message.text
    zapros = "SELECT a.day_of_week, name, room_numb, start_time, full_name FROM timetable a JOIN subject b ON a.subject_id = b.subject_id JOIN teacher c ON b.subject_id = c.subject_id"
    type_of_week = get_current_week()
    if type_of_week == "–í–µ—Ä—Ö–Ω—è—è –Ω–µ–¥–µ–ª—è":
        cur.execute(f"{zapros}" + " WHERE type_of_week = '–Ω–µ—á—ë—Ç–Ω–∞—è' AND a.day_of_week = " + f"'{day}'" + ";")
    else:
        cur.execute(f"{zapros}" + " WHERE type_of_week = '—á—ë—Ç–Ω–∞—è' AND a.day_of_week = " + f"'{day}'" + ";")
    schedule = cur.fetchall()
    if len(schedule) > 0:
        schedule_text = f"{day}:\n\n"
        for i in schedule:
            subject = i[1]
            room_numb = i[2]
            start_time = i[3]
            full_name = i[4]
            schedule_text += f"{subject} \n{room_numb} {start_time} \n{full_name} \n\n"
        bot.send_message(message.chat.id, schedule_text)
    else:
        bot.send_message(message.chat.id, "–ù–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")


#–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—Ä—ë—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π + –µ—Å–ª–∏ –Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç
data = ['—Å–ø–∞—Å–∏–±–æ','–±–ª–∞–≥–æ–¥–∞—Ä—é', '–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π','–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ','—É —Ç–µ–±—è –µ—Å—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏?']
@bot.message_handler(content_types=['text'])
def thanks(message):
    if message.text.lower() == data[0] or message.text.lower() == data[1]:
        bot.send_message(message.chat.id, '–†–∞–¥ –±—ã–ª –í–∞–º –ø–æ–º–æ—á—å.\n–ü–∏—à–∏—Ç–µ –µ—â—ë!üòä')
    elif message.text.lower() == data[2] or message.text.lower() == data[3] or message.text.lower() == data[4]:
        bot.send_message(message.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ' + message.from_user.first_name + '!üëã\n–í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–æ –º–Ω–µ -\n–ø–æ –∫–æ–º–∞–Ω–¥–µ /help')
    elif message.text.lower() == data[5]:
        bot.send_message(message.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —É –º–µ–Ω—è –Ω–µ—Ç.\n‚ùì –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –º–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö , –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /help")
    else: bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –í–∞—Å –Ω–µ –ø–æ–Ω—è–ª.üòø")

#–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞, –∑–∞—Ç–µ–º - –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ë–î
bot.polling()
cur.close()
conn.close()






